// components/metric-card.tsx
import { Card, CardContent } from "@/components/ui/card"
import { forwardRef } from "react" // ðŸ‘ˆ Import forwardRef

// Define the props type separately for clarity
type MetricCardProps = {
Â  title: string
Â  subtitle: string
Â  value: number
Â  help?: string
Â  format?: "number" | "currency"
Â  variant?: "primary" | "default"
Â  // Add className prop to apply external styling (like blur/focus in the tour)
Â  className?: string 
}

// ðŸš€ Use forwardRef to accept and pass the ref
const MetricCard = forwardRef<HTMLDivElement, MetricCardProps>(
Â  ({ title, subtitle, value, format = "number", help, variant, className }, ref) => { // ðŸ‘ˆ Destructure 'ref' and 'className'
Â  Â  
Â  Â  // Ensure value is a number before formatting, defaulting to 0 if null/undefined
Â  Â  const numericValue = typeof value === 'number' ? value : 0;
Â  Â  
Â  Â  const display =
Â  Â  Â  format === "currency" 
Â  Â  Â  Â  ? `â‚¹ ${Intl.NumberFormat("en-IN").format(numericValue)}` 
Â  Â  Â  Â  : Intl.NumberFormat("en-IN").format(numericValue)

Â  Â  return (
Â  Â  Â  <Card 
Â  Â  Â  Â  ref={ref} // ðŸ‘ˆ Attach the forwarded ref here
Â  Â  Â  Â  className={`${variant === "primary" ? "border-2" : ""} ${className || ''}`} // ðŸ‘ˆ Apply external className
Â  Â  Â  Â  aria-label={`${title} ${subtitle}`}
Â  Â  Â  >
Â  Â  Â  Â  <CardContent className="p-4">
Â  Â  Â  Â  Â  <div className="text-sm text-muted-foreground">{title}</div>
Â  Â  Â  Â  Â  <div className="text-xs text-muted-foreground">{subtitle}</div>
Â  Â  Â  Â  Â  <div className="text-3xl font-semibold mt-2">{display}</div>
Â  Â  Â  Â  Â  {help && <div className="text-xs text-muted-foreground mt-1">{help}</div>}
Â  Â  Â  Â  </CardContent>
Â  Â  Â  </Card>
Â  Â  )
Â  }
)

// Add a display name for better debugging
MetricCard.displayName = 'MetricCard';

export { MetricCard }; // ðŸ‘ˆ Export the forwardRef component