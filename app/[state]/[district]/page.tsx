// app/[state]/[district]/page.tsx (Corrected)

import { getMetricsForDistrictMonth, getTrendForDistrict } from "@/lib/mgnrega"
import NoDataPage from "@/components/no-data-page"
// ðŸš€ IMPORT THE NEW CLIENT COMPONENT WRAPPER
import { DistrictPageClient } from "@/components/district-page-client" 

type Props = {
Â  params: { state: string; district: string }
Â  searchParams?: { month?: string; year?: string }
}

// Convert slugs to title
function slugToTitle(s: string) {
Â  return decodeURIComponent(s).replaceAll("-", " ").replace(/\b\w/g, (c) => c.toUpperCase())
}

// Utility function (no longer needed here, but kept if used elsewhere)
// function monthLabel(m: number) {
// Â  return new Date(2000, m - 1, 1).toLocaleString("en-IN", { month: "long" })
// }

export default async function DistrictPage({ params, searchParams }: Props) {
Â  const stateSlug = params.state
Â  const districtSlug = params.district

Â  const month = Number(searchParams?.month) || new Date().getMonth() + 1
Â  const year = Number(searchParams?.year) || new Date().getFullYear()

Â  const stateName = slugToTitle(stateSlug)
Â  const districtName = slugToTitle(districtSlug)

Â  const metrics = await getMetricsForDistrictMonth(stateName, districtName, month, year)
Â  if (!metrics || Object.keys(metrics).length === 0) {
Â  Â  return <NoDataPage stateName={stateName} districtName={districtName} />
Â  }

Â  const trend = await getTrendForDistrict(stateName, districtName, year, 12)

Â  return (
    // ðŸš€ Pass server-fetched data to the single Client Component wrapper
    <DistrictPageClient 
        stateName={stateName}
        districtName={districtName}
        month={month}
        year={year}
        metrics={metrics}
        trend={trend}
    />
Â  )
}